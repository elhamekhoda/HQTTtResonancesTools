Index: TopSystematicObjectMaker/JetObjectCollectionMaker.h
===================================================================
--- TopSystematicObjectMaker/JetObjectCollectionMaker.h	(revision 725843)
+++ TopSystematicObjectMaker/JetObjectCollectionMaker.h	(working copy)
@@ -80,6 +80,9 @@
       virtual void specifiedSystematics( const std::set<std::string>& specifiedSystematics , const ToolHandle<ICPJetUncertaintiesTool>& tool , std::unordered_map<CP::SystematicSet,CP::SystematicSet>& map , const std::string& modName , bool isLargeR = false); 
       virtual void specifiedSystematics( const std::set<std::string>& specifiedSystematics , const ToolHandle<IJERSmearingTool>& tool , std::unordered_map<CP::SystematicSet,CP::SystematicSet>& map );      
       
+      void addCorrelatedSyst( std::unordered_map<CP::SystematicSet,CP::SystematicSet>& hybrid , std::vector<std::string> &pattern, std::unordered_map<CP::SystematicSet,CP::SystematicSet>& myMap, const std::string &modName, bool isLargeR );
+      void addCorrelatedSyst( std::unordered_map<CP::SystematicSet,CP::SystematicSet>& hybrid , const std::string &pattern, std::unordered_map<CP::SystematicSet,CP::SystematicSet>& myMap, const std::string &modName, bool isLargeR );
+
       StatusCode execute( const bool isLargeR );
       
       StatusCode calibrate( const bool isLargeR );
@@ -124,6 +127,14 @@
       std::unordered_map<CP::SystematicSet,CP::SystematicSet> m_systMap_ReducedNPScenario3;
       std::unordered_map<CP::SystematicSet,CP::SystematicSet> m_systMap_ReducedNPScenario4;
       std::unordered_map<CP::SystematicSet,CP::SystematicSet> m_systMap_LargeR;
+
+      std::unordered_map<CP::SystematicSet,CP::SystematicSet> m_systMap_LargeR_corr1;
+      std::unordered_map<CP::SystematicSet,CP::SystematicSet> m_systMap_corr1;
+
+      std::unordered_map<CP::SystematicSet,CP::SystematicSet> m_systMap_LargeR_corr2a;
+      std::unordered_map<CP::SystematicSet,CP::SystematicSet> m_systMap_corr2a;
+      std::unordered_map<CP::SystematicSet,CP::SystematicSet> m_systMap_LargeR_corr2b;
+
       std::unordered_map<CP::SystematicSet,CP::SystematicSet> m_systMap_LargeRSplitScales1;
       std::unordered_map<CP::SystematicSet,CP::SystematicSet> m_systMap_LargeRSplitScales2;
       std::unordered_map<CP::SystematicSet,CP::SystematicSet> m_systMap_JER;
Index: Root/JetObjectCollectionMaker.cxx
===================================================================
--- Root/JetObjectCollectionMaker.cxx	(revision 725843)
+++ Root/JetObjectCollectionMaker.cxx	(working copy)
@@ -52,6 +52,13 @@
   m_systMap_ReducedNPScenario3(),
   m_systMap_ReducedNPScenario4(),
   m_systMap_LargeR(),
+
+  m_systMap_LargeR_corr1(),
+  m_systMap_corr1(),
+  m_systMap_LargeR_corr2a(),
+  m_systMap_corr2a(),
+  m_systMap_LargeR_corr2b(),
+
   m_systMap_JER()
 {
   declareProperty( "config" , m_config );
@@ -156,6 +163,7 @@
         largeR_SS1("LARGERJET_SplitScales1_"),
         largeR_SS2("LARGERJET_SplitScales2_");
 
+
       if (!m_config->doMultipleJES()) {
         specifiedSystematics( syst , m_jetUncertaintiesTool , m_systMap_AllNP , allNP );
       }
@@ -169,6 +177,36 @@
         specifiedSystematics( syst , m_jetUncertaintiesToolLargeR , m_systMap_LargeR , largeR , true);
         specifiedSystematics( syst , m_jetUncertaintiesToolLargeRSplitScales1 , m_systMap_LargeRSplitScales1 , largeR_SS1 , true);
         specifiedSystematics( syst , m_jetUncertaintiesToolLargeRSplitScales2 , m_systMap_LargeRSplitScales2 , largeR_SS2 , true);
+
+        std::string largeR_corr1_up("CORRELATED_LARGERJET_CORR1__1up");
+        std::string largeR_corr1_dw("CORRELATED_LARGERJET_CORR1__1down");
+        std::string largeR_corr2a_up("CORRELATED_LARGERJET_CORR2A__1up");
+        std::string largeR_corr2a_dw("CORRELATED_LARGERJET_CORR2A__1down");
+        std::string largeR_corr2b_up("CORRELATED_LARGERJET_CORR2B__1up");
+        std::string largeR_corr2b_dw("CORRELATED_LARGERJET_CORR2B__1down");
+
+        std::vector<std::string> tmp;
+
+        addCorrelatedSyst( m_systMap_corr1 , "GroupedNP_2__1up", m_systMap_ReducedNPScenario1, largeR_corr1_up, false );
+        addCorrelatedSyst( m_systMap_LargeR_corr1 , "Top_Run1__1up", m_systMap_LargeR, largeR_corr1_up, true );
+        
+        addCorrelatedSyst( m_systMap_corr1 , "GroupedNP_2__1down", m_systMap_ReducedNPScenario1, largeR_corr1_dw, false );
+        addCorrelatedSyst( m_systMap_LargeR_corr1 , "Top_Run1__1down", m_systMap_LargeR, largeR_corr1_dw, true );
+
+        addCorrelatedSyst( m_systMap_corr2a , "GroupedNP_2__1up", m_systMap_ReducedNPScenario1, largeR_corr2a_up, false );
+        addCorrelatedSyst( m_systMap_LargeR_corr2a , "Top_Run1_pT__1up", m_systMap_LargeRSplitScales1, largeR_corr2a_up, true );
+
+        addCorrelatedSyst( m_systMap_corr2a , "GroupedNP_2__1down", m_systMap_ReducedNPScenario1, largeR_corr2a_dw, false );
+        addCorrelatedSyst( m_systMap_LargeR_corr2a , "Top_Run1_pT__1down", m_systMap_LargeRSplitScales1, largeR_corr2a_dw, true );
+
+        tmp.clear();
+        tmp.push_back("Top_Run1_Tau32__1up");
+        tmp.push_back("Top_Run1_mass__1up");
+        addCorrelatedSyst( m_systMap_LargeR_corr2b , tmp, m_systMap_LargeRSplitScales1, largeR_corr2b_up, true );
+        tmp.clear();
+        tmp.push_back("Top_Run1_Tau32__1down");
+        tmp.push_back("Top_Run1_mass__1down");
+        addCorrelatedSyst( m_systMap_LargeR_corr2b , tmp, m_systMap_LargeRSplitScales1, largeR_corr2b_dw, true );
       }
     }
 
@@ -238,6 +276,14 @@
       top::check( applySystematic( m_jetUncertaintiesToolLargeR , m_systMap_LargeR, true ) , "Failed to apply large-R syst.");
       top::check( applySystematic( m_jetUncertaintiesToolLargeRSplitScales1 , m_systMap_LargeRSplitScales1, true ) , "Failed to apply large-R syst.");
       top::check( applySystematic( m_jetUncertaintiesToolLargeRSplitScales2 , m_systMap_LargeRSplitScales2, true ) , "Failed to apply large-R syst.");
+
+      top::check( applySystematic( m_jetUncertaintiesToolLargeR , m_systMap_LargeR_corr1, true ) , "Failed to apply large-R syst.");
+      top::check( applySystematic( m_jetUncertaintiesToolReducedNPScenario1 , m_systMap_corr1, false ) , "Failed to apply large-R syst.");
+
+      top::check( applySystematic( m_jetUncertaintiesToolLargeRSplitScales1 , m_systMap_LargeR_corr2a, true ) , "Failed to apply large-R syst.");
+      top::check( applySystematic( m_jetUncertaintiesToolReducedNPScenario1 , m_systMap_corr2a, false ) , "Failed to apply large-R syst.");
+
+      top::check( applySystematic( m_jetUncertaintiesToolLargeRSplitScales1 , m_systMap_LargeR_corr2b, true ) , "Failed to apply large-R syst.");
     }
   }
 
@@ -322,13 +368,13 @@
     ///-- Don't do the nominal, we've already done that --///
     if ((*syst).second.hash() != m_nominalSystematicSet.hash()) {
 
+      ///-- Shallow copy of the xAOD --///
+      std::pair< xAOD::JetContainer*, xAOD::ShallowAuxContainer* > shallow_xaod_copy = xAOD::shallowCopyContainer( *xaod );
+
       ///-- Tell the tool which systematic to use --///
       ///-- Here we use the second, original CP::SystematicSet --///
       top::check( tool->applySystematicVariation( (*syst).second ) , "Failed to applySystematicVariation" );
 
-      ///-- Shallow copy of the xAOD --///
-      std::pair< xAOD::JetContainer*, xAOD::ShallowAuxContainer* > shallow_xaod_copy = xAOD::shallowCopyContainer( *xaod );
-
       ///-- Loop over the xAOD Container --///
       for( auto jet : *(shallow_xaod_copy.first) ){
 
@@ -348,6 +394,7 @@
         ///-- Update JVT --///
         if (!isLargeR) jet->auxdecor<float>("AnalysisTop_JVT") = m_jetUpdateJvtTool->updateJvt( *jet );
       }
+      
 
       ///-- set links to original objects- needed for MET calculation --///
       bool setLinks = xAOD::setOriginalObjectLink( *xaod, *shallow_xaod_copy.first );
@@ -481,7 +528,44 @@
   return StatusCode::SUCCESS;
 }
 
+void JetObjectCollectionMaker::addCorrelatedSyst( std::unordered_map<CP::SystematicSet,CP::SystematicSet>& hybrid , const std::string &pattern, std::unordered_map<CP::SystematicSet,CP::SystematicSet>& myMap, const std::string &modName, bool isLargeR ) {
+  std::vector<std::string> single;
+  single.push_back(pattern);
+  addCorrelatedSyst(hybrid, single, myMap, modName, isLargeR);
+}
 
+void JetObjectCollectionMaker::addCorrelatedSyst( std::unordered_map<CP::SystematicSet,CP::SystematicSet>& hybrid , std::vector<std::string> &pattern, std::unordered_map<CP::SystematicSet,CP::SystematicSet>& myMap, const std::string &modName, bool isLargeR ) {
+  ///-- MC only --///
+  if (m_config->isMC()) {
+
+    CP::SystematicSet modSet( modName );
+    CP::SystematicSet listSet ( modName );
+    for (auto s : myMap) {
+        if (!m_config->isSystNominal( m_config->systematics() )) {
+            for (std::vector<std::string>::const_iterator it = pattern.begin(); it != pattern.end(); ++it) {
+              if (s.second.name().find(*it) != std::string::npos) {
+                  listSet.insert(s.second);
+              }
+            }
+        } // Don't do anything if the user requests nominal only
+    } // Loop over systList
+    hybrid.insert(std::make_pair(modSet, listSet));
+    if (isLargeR) {
+      m_specifiedSystematicsLargeR.push_back(modSet);
+      m_recommendedSystematics.sort();
+      m_recommendedSystematics.unique();
+      m_specifiedSystematicsLargeR.sort();
+      m_specifiedSystematicsLargeR.unique();
+    } else {
+      m_specifiedSystematics.push_back(modSet);
+      m_recommendedSystematics.sort();
+      m_recommendedSystematics.unique();
+      m_specifiedSystematics.sort();
+      m_specifiedSystematics.unique();
+    }
+  } // MC only
+}
+
 void JetObjectCollectionMaker::specifiedSystematics(const std::set<std::string>& specifiedSystematics,
                                                     const ToolHandle<ICPJetUncertaintiesTool>& tool,
                                                     std::unordered_map<CP::SystematicSet,CP::SystematicSet>& map,
